_tasks:
  # === Create virtual environment ===
  - command: [uv, venv, "--python={{ default_python_version }}"]
    when: "{{ _copier_operation == 'copy' }}"
  - command: [uv, sync, --all-extras, --all-groups]
    when: "{{ _copier_operation == 'copy' }}"
  # === Initialize git ===
  - command: [git, init, --initial-branch=main]
    when: "{{ _copier_operation == 'copy' }}"
  # === Create GitHub repo ===
  - command:
      [
        gh,
        repo,
        create,
        "{{ repo_name }}",
        --public,
        "--description={{ project_description }}",
        --source=.,
        "--homepage={{ homepage_url }}",
        "--disable-wiki",
      ]
    when: "{{ _copier_operation == 'copy' }}"
  # --- Set up Codecov secret ---
  - command: |
      gh secret set CODECOV_TOKEN \
        --app actions \
        --body "{{ codecov_token }}" \
        --repo "{{ repo_namespace }}/{{ repo_name }}"
    when: "{{ _copier_operation == 'copy' and codecov_token != '' }}"
  - command: [git, add, -A]
    when: "{{ _copier_operation == 'copy' }}"
  - command: [git, commit, --all, -m üöÄ Create project from template]
    when: "{{ _copier_operation == 'copy' }}"
  - command: [git, push]
    when: "{{ _copier_operation == 'copy' }}"
  # === Setup and run pre-commit ===
  - command: [pre-commit, install]
    when: "{{ _copier_operation == 'copy' }}"
  # TODO: Check if we really want to run this
  # - command: .venv/bin/pre-commit run --all-files --hook-stage=manual || true
  #   when: "{{ _copier_operation == 'copy' }}"
  # TODO : Print hint to remind to activate the virtual environment (grep the output from uv venv above to have the correct command to use, or use the dedicated command if this feature request is accepted: https://github.com/astral-sh/uv/issues/14038)
  # === PyPI Trusted Publisher Setup Instructions ===
  - command: |
      echo ""
      echo "üîí PyPI Trusted Publisher Setup Required:"
      echo ""
      echo "1. Go to PyPI Account Settings > Trusted Publishers: https://pypi.org/manage/account/publishing/"
      echo "2. Go to the 'Add a new pending publisher' section and click on the `GitHub` tab"
      echo "3. Fill in the details:"
      echo "   - PyPI Project Name: {{ package_name }}"
      echo "   - Owner: {{ repo_namespace }}"
      echo "   - Repository name: {{ repo_name }}"
      echo "   - Workflow name: publish.yaml"
      echo "   - Environment name: pypi (recommended)"
      echo ""
      echo "4. Add the publisher"
      echo ""
      echo "‚ö†Ô∏è Important: This allows secure publishing from without storing API tokens!"
      echo "üìñ Docs: https://docs.pypi.org/trusted-publishers/"
      echo ""
    when: "{{ _copier_operation == 'copy' }}"


  # === Update ===
  - command:
      [
        gh,
        repo,
        edit,
        Kajiih/nested_dict_tools,
        "--description={{ project_description }}",
      ]
    when: "{{ _copier_operation == 'update' }}"
