name: 🚦 CI

permissions:
  contents: read
  # actions: read
  # security-events: write  # For codecov

on:
  push:
    branches: # Add any other mainline branch
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    {% raw %}
    name: 🧪 Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    {% endraw %}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["{{ min_python_version }}", "{{ max_python_version }}"]
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
    timeout-minutes: 15

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 🐍 Install uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0
        with:
          {% raw %}
          python-version: ${{ matrix.python-version }}
          {% endraw %}
          activate-environment: true
          enable-cache: true

      - name: 📥 Install dependencies
        run: uv sync --all-extras --dev

      # https://github.com/thombashi/pytest-md-report
      - name: 🧪 Run Pytest with doctest
        env:
          REPORT_OUTPUT: pytest_report.md
        run: |
          echo "REPORT_FILE=${REPORT_OUTPUT}" >> "$GITHUB_ENV"
          pytest -m "" --md-report --md-report-flavor=gfm --md-report-output="$REPORT_OUTPUT"
      - name: 🧪 Add test output reports to the job summary
        if: failure()
        run: |
          if [ -f "$REPORT_FILE" ]; then
            echo "<details><summary>Test Report</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@78f372e97e6e2f82dc51b004c5fb646501ee30ae # 5.4.3
        env:
          {% raw %}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          {% endraw %}

  lint:
    name: 🧹 Lint & Type Check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 10
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 🐍 Install uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0
        with:
          python-version: {{ default_python_version }}
          activate-environment: true
          enable-cache: true
      - name: 📥 Install dependencies
        run: uv sync --all-extras --dev

      - name: 🔍 Lint check
        uses: astral-sh/ruff-action@813f619ec22bd86f873edaa42d5b01aff58688c9 # 3.4.0
        with:
          args: check --output-format github

      - name: 🧹 Format check
        run: ruff format --check --diff

      - name: 🔍 Type check
        run: basedpyright
