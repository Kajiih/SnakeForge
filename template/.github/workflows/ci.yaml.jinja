name: 🚦 CI

on:
  push:
    branches: # Add any other mainline branch
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["{{ min_python_version }}", "{{ max_python_version }}"]
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
    {% raw %}
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    {% endraw %}
    timeout-minutes: 15

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🐍 Install uv
        uses: astral-sh/setup-uv@v6
        with:
          {% raw %}
          python-version: ${{ matrix.python-version }}
          {% endraw %}
          activate-environment: true
          enable-cache: true
      # TODO: Check if we want to use `setup-python` action instead of installing with uv:
      # https://github.com/astral-sh/setup-uv/tree/v6/?tab=readme-ov-file#do-i-still-need-actionssetup-python-alongside-setup-uv
      # {% raw %}
      # - name: 🐍 Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # {% endraw %}

      - name: 📥 Install dependencies
        run: uv sync --all-extras --dev

      - name: 🧪 Run Pytest with doctest
        env:
          REPORT_OUTPUT: pytest_report.md
        run: |
          echo "REPORT_FILE=${REPORT_OUTPUT}" >> "$GITHUB_ENV"
          pytest -m "" --md-report --md-report-flavor=gfm --md-report-output="$REPORT_OUTPUT"

      - name: 🧪 Add test output reports to the job summary
        run: |
          if [ -f "$REPORT_FILE" ]; then
            echo "<details><summary>Test Report</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          {% raw %}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          {% endraw %}

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - run: pip install hatch
  #     - run: hatch fmt --check
  #     - run: hatch lint
